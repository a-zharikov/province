// Цвета
$colors: (
  primary: (background-color: $primary, color: $white),
  secondary: (background-color: $secondary, color: $text),
  tertiary: (background-color: $text, color: $white),
  success: (background-color: $success, color: $white),
  danger: (background-color: $danger, color: $white),
);

$sizes: (
  large: (font-size: 24px, line-height: 24px, weight: 600, padding: 16px 24px),
  middle: (font-size: 20px, line-height: 20px, weight: 600, padding: 12px 16px),
  small: (font-size: 16px, line-height: 16px, weight: 500, padding: 8px 12px)
);

$outline: (
  primary: (background-color: $white, color: $primary, box-shadow: inset 0 0 0 2px $primary),
  secondary: (background-color: $white, color: $text, box-shadow: inset 0 0 0 2px $secondary),
  tertiary: (background-color: $white, color: $text, box-shadow: inset 0 0 0 2px $text),
  success: (background-color: $white, color: $text, box-shadow: inset 0 0 0 2px $success),
  danger: (background-color: $white, color: $text, box-shadow: inset 0 0 0 2px $danger)
);

$hover: (
  primary: (background-color: $primary-hover, color: $white),
  secondary: (background-color: $secondary-hover, color: $text),
  tertiary: (background-color: $tertiary-hover, color: $white),
  success: (background-color: $success-hover, color: $white),
  danger: (background-color: $danger-hover, color: $white)
);

$transparent: (
  primary: $primary,
  secondary: $secondary,
  tertiary: $text,
  success: $success,
  danger: $danger
);

$pressed: (
  primary: (background-color: $primary-pressed, color: $white),
  secondary: (background-color: $secondary-pressed, color: $text),
  tertiary: (background-color: $text, color: $white),
  success: (background-color: $success-pressed, color: $white),
  danger: (background-color: $danger-pressed, color: $white)
);


.button {
  width: auto;
  cursor: pointer;
  box-sizing: border-box;
  gap: 8px;
  border: 0;
  border-radius: .5em;
  text-decoration: none;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  position: relative;
  z-index: 2;

  &::after {
    content: '';
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    background: $tr;
    z-index: -1;
    opacity: 0;
    transition: .5s;
    transform: translateX(-100%);
    border-radius: 4px;
    border-top-right-radius: 100px;
  }

  // Размеры и основные стили
  @each $size-name, $size-map in $sizes {
    &.#{$size-name} {
      padding: map-get($size-map, padding);
      font-size: map-get($size-map, font-size);
      line-height: map-get($size-map, line-height);
      weight: map-get($size-map, weight);

      // Цвета и состояния
      @each $color-name, $color-map in $colors {
        &.#{$color-name} {
          background-color: map-get($color-map, background-color);
          color: map-get($color-map, color);
        }
      }

      // Ховер
      @each $color-name, $color-map in $hover {
        &.#{$color-name} {
          &:hover {
            color: map-get($color-map, color);
            &::after {
              opacity: 1;
              width: calc(100% + 4px);
              height: calc(100% + 4px);
              transform: translateX(0);
              border-top-right-radius: 4px;
              background-color: map-get($color-map, background-color);
            }
  		    }
        }
      }

      // Нажатая или активная кнопка
      @each $color-name, $color-map in $pressed {
        &.#{$color-name} {
          &:active {
            color: map-get($color-map, color);
            &::after {
              background-color: map-get($color-map, background-color);
            }
  		    }
        }
      }
    }
  }

  // Модификаторы
  // outline
  @each $outline-name, $outline-map in $outline {
    &.#{$outline-name} {
      &.outline { 
        background-color: map-get($outline-map, background-color);
        color: map-get($outline-map, color);
        box-shadow: map-get($outline-map, box-shadow);
      }
    }
  }
  // transparent
  @each $transparent-name, $transparent-value in $transparent {
    &.#{$transparent-name} {
      &.transparent { 
        background-color: $tr;
        color: $transparent-value;
        box-shadow: none;
      }
    }
  }
  // active
  @each $color-name, $color-map in $pressed {
    &.#{$color-name} {
      &.pressed { 
        background-color: map-get($color-map, background-color);
        color: map-get($color-map, color);
        box-shadow: map-get($color-map, box-shadow);
      }
    }
  }

  // disabled
  &.disabled {
    opacity: .5;
    pointer-events: none;
    filter: none;
  }

  // full
  &.full {
    width: 100%;
  }
  &.full_mobile {
    @include adaptive(mobile) {
      width: 100%;
    }
  }

  // Loading
  &.loading {
    pointer-events: none;

    i {
      opacity: 0;
      position: absolute;
    }

    &::before {
      content: '';
      width: .5em;
      height: .5em;
      border-radius: $br-100;
      border: $bw-x0-5 dashed;
      display: block;
      animation: rotation 2.5s infinite linear;
    }
  }
}